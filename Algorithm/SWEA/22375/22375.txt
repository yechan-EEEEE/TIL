
N개의 전등이 설치되어 있다.
각 전등은 1번부터 N번까지 번호가 붙어있고, i번 스위치를 조작하면 i번부터 N번까지의 전등의 켜짐/꺼짐 상태가 반대가 된다고 한다.
모든 전등의 현재 상태와 스위치 조작 후 상태가 주어지면 최소 몇 개의 스위치를 조작해야 하는지 알아내는 프로그램을 만드시오.

전등이 켜진 상태는 1, 꺼진 상태는 0으로 주어진다.
예를 들어 현재 상태 A가 0 0 0이고, 조작 후 상태 B가 0 1 0인 경우,
초기상태가  0 0 0 이므로,
2번 스위치를 조작해 0 1 1인 상태를 만들고,
3번 스위치를 조작해 0 1 0인 상태를 만들 수 있으므로, 최소 2번의 조작이 필요하다.

[입력]
첫 줄에 테스트케이스 개수 T, 다음 줄 부터 케이스 별로 스위치 개수 N, 다음 두 줄에 조작 전 스위치 상태 Ai와 조작 후 상태 Bi가 각각 N개씩 주어진다.
(1<=T<=10, 1<=N<=100)

[출력]
#과 케이스번호, 빈칸으로 구분된 답을 출력한다.

입력                      출력
3
3
0 0 0
0 1 0                    #1 2

5
0 1 1 0 0
0 0 0 1 1
                         #2 1
10
1 1 1 1 1 0 0 0 1 1
1 1 0 1 1 0 1 1 0 0
                         #3 3
1 1 1 1 1 0 0 0 1 1
1 1 0 0 0 1 1 1 0 0
1 1 0 1 1 0 0 0 1 1
1 1 0 1 1 0 1 1 0 0

리스트에 넣었을텐데 인덱스를 건드리면 그 다음거부터 전부 바뀐다
바뀌는 건 어떻게 하지
1 0
바꿔야 될 칸에 가서 그 뒤까지 전부 1을 더하고 2로 나눈 나머지로 저장?
바꾼 결과값이랑 목표값이 같으면 바꾼 횟수 출력
들어온 리스트랑 목표 리스트, 조작한 리스트 3개 만들고
두 개를 처음부터 비교하다가 리스트[x] 가 값이 다르면
들어온 리스트를 조작해서 조작한 리스트 값을 바꾸고
바꿨는데도 목표 리스트랑 값이 다르면 다시 비교
반복하다가 같아지면 끝 출력

어 근데 사실 다 안바꿔줘도 되네
그냥 원래 리스트랑 바꿀 리스트랑 다른 값 몇갠지 확인해서 출력하면 끝?
아 이건 또 아니네
